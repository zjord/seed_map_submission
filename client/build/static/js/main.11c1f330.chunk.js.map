{"version":3,"sources":["Table.js","Form.js","static/assets/jemilicious_logo.png","static/Icon/dandelion_icon.png","App.js","index.js"],"names":["TableHeader","TableBody","props","rows","dData","map","row","index","col","lat","lon","time","src","URL","createObjectURL","img","alt","height","onClick","remove_dData","Table","Form","initialState","autoloc","temp","hum","state","handleDataChange","e","target","name","value","setState","handleImgChange","files","handleKeypress","keyCode","submitForm","grabLocation","navigator","geolocation","getCurrentPosition","success","Swal","fire","title","confirmButtonText","icon","then","coords","latitude","longitude","error","html","footer","console","log","a","text","preventDefault","handleSubmit","inst","url","axios","get","res","data","main","humidity","catch","err","post","document","getElementById","this","action","onSubmit","htmlFor","type","id","onChange","onKeyDown","accept","capture","Component","App","marker","filter","cdData","i","className","style","logo","href","textAlign","MapContainer","center","zoom","width","TileLayer","attribution","coord","Marker","position","Icon","iconUrl","dandelion","iconRetinaUrl","iconSize","Math","random","ReactDOM","render"],"mappings":"+NAGMA,EAAc,WAChB,OACI,gCACA,+BACI,wCACA,0CACA,2CACA,sCACA,uCACA,kDAKNC,EAAY,SAACC,GACf,IAAMC,EAAOD,EAAME,MAAMC,KAAI,SAACC,EAAKC,GAC/B,OACI,+BACI,6BAAKD,EAAIE,MACT,6BAAKF,EAAIG,MACT,6BAAKH,EAAII,MACT,6BAAKJ,EAAIK,OACT,6BAAI,qBAAKC,IAAKC,IAAIC,gBAAgBR,EAAIS,KAAMC,IAAI,gBAAgBC,OAAQ,QACxE,6BACI,wBAAQC,QAAS,kBAAMhB,EAAMiB,aAAaZ,IAA1C,mBAPCA,MAYjB,OAAO,gCAAQJ,KAcJiB,EAZD,SAAClB,GACX,IAAOE,EAAuBF,EAAvBE,MAAOe,EAAgBjB,EAAhBiB,aAEd,OACI,kCACI,cAAC,EAAD,IACA,cAAC,EAAD,CAAWf,MAAOA,EAAOe,aAAcA,Q,kEChC9BE,E,4MACjBC,aAAe,CACXd,IAAK,GACLC,IAAK,GACLC,IAAK,GACLC,KAAM,GACNY,QAAS,GACTC,KAAM,GACNC,IAAK,I,EAETC,MAAQ,EAAKJ,a,EAEbK,iBAAmB,SAAAC,GACf,MAAsBA,EAAEC,OAAjBC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,MACb,EAAKC,SAAL,eAAgBF,EAAOC,K,EAG3BE,gBAAkB,SAAAL,GACd,IAAMb,EAAMa,EAAEC,OAAOK,MAAM,GAC3B,EAAKF,SAAS,CAACjB,IAAKA,K,EAIxBoB,eAAiB,SAAAP,GACK,KAAdA,EAAEQ,SAAiB,EAAKC,c,EAGhCC,aAAe,WACXC,UAAUC,YAAYC,oBAClB,SAAAC,GACIC,IAAKC,KAAK,CACNC,MAAO,oBACPC,kBAAmB,QACnBC,KAAM,YACPC,MAAK,WACJ,EAAKhB,SAAS,CACVvB,IAAKiC,EAAQO,OAAOC,SACpBxC,IAAKgC,EAAQO,OAAOE,UACpB5B,QAAS,eAIrB,SAAA6B,GACIT,IAAKC,KAAK,CACNC,MAAO,SACPQ,KAAM,2HAENP,kBAAmB,SACnBQ,OAAQ,4DACRP,KAAM,UACPC,MAAK,WACJO,QAAQC,IAAI,oCACZD,QAAQC,IAAIJ,GACZ,EAAKpB,SAAS,CACVT,QAAS,kB,EAO7Bc,W,uCAAa,WAAOT,GAAP,iBAAA6B,EAAA,yDACqD,MAAxD,EAAK/B,MAAMjB,KAAO,EAAKiB,MAAMhB,KAAO,EAAKgB,MAAMX,KAD5C,gBAEL4B,IAAKC,KAAK,CACNC,MAAO,UACPa,KAAM,6BACNZ,kBAAmB,sBACnBC,KAAM,YACPC,OAPE,8BAUdpB,EAAE+B,iBACO,EAAKzD,MAAM0D,aAAa,EAAKlC,OACzBmC,EAAO,GACK,mCACVC,EAdD,2EAc2E,EAAKpC,MAAMjB,IAdtF,gBAciG,EAAKiB,MAAMhB,IAd5G,kBAaW,oCAEhB6C,QAAQC,IAAIM,GAfP,UAkBCC,IAAMC,IAAIF,GAAKd,MAAK,SAAAiB,GAClBV,QAAQC,IAAIS,EAAIC,MAChB,EAAKlC,SAAS,CACVR,KAAMyC,EAAIC,KAAKC,KAAK3C,KACpBC,IAAKwC,EAAIC,KAAKC,KAAKC,WAGtBP,EAAO,CACJrD,IAAK,EAAKkB,MAAMlB,IAChBC,IAAK,EAAKiB,MAAMjB,IAChBC,IAAK,EAAKgB,MAAMhB,IAChBC,KAAM,EAAKe,MAAMf,KACjBY,QAAS,EAAKG,MAAMH,QACpBC,KAAM,EAAKE,MAAMF,KACjBC,IAAK,EAAKC,MAAMD,QAErB4C,OAAM,SAAAC,GAAG,OAAIf,QAAQC,IAAIc,MAlC3B,eAqCLf,QAAQC,IAAIK,GArCP,UAwCRE,IAAMQ,KAAK,UAAW,CAACV,SAAQb,MAAM,SAACiB,GAC3CV,QAAQC,IAAIS,GACZV,QAAQC,IAAIS,EAAIC,MAEA,YAAbD,EAAIC,KACSvB,IAAKC,KAAK,CACNC,MAAO,kBACPQ,KAAM,0HACNN,KAAM,YACPC,OAGlBL,IAAKC,KAAK,CACSC,MAAM,+BACNQ,KAAM,kBACNN,KAAM,YACPC,UAxDN,QA8DT,EAAKhB,SAAS,EAAKV,cACnBkD,SAASC,eAAe,SAAS1C,MAAO,KA/D/B,4C,kGAkEb,WACI,MAA6B2C,KAAKhD,MAA3BlB,EAAP,EAAOA,IAAKC,EAAZ,EAAYA,IAAKC,EAAjB,EAAiBA,IAAIC,EAArB,EAAqBA,KAErB,OACI,uBAAMgE,OAAO,UAAUC,SAAUF,KAAKrC,WAAtC,UACI,uBAAOwC,QAAQ,MAAf,oBACA,uBACIC,KAAK,OACLhD,KAAK,MACLiD,GAAG,MACHhD,MAAOvB,EACPwE,SAAUN,KAAK/C,iBACfsD,UAAWP,KAAKvC,iBACpB,uBAAO0C,QAAQ,MAAf,sBACA,uBACIC,KAAK,OACLhD,KAAK,MACLiD,GAAG,MACHhD,MAAOtB,EACPuE,SAAUN,KAAK/C,iBACfsD,UAAWP,KAAKvC,iBACpB,uBAAO0C,QAAQ,MAAf,uBACA,uBACIC,KAAK,OACLhD,KAAK,MACLiD,GAAG,MACHhD,MAAOrB,EACPsE,SAAUN,KAAK/C,iBACfsD,UAAWP,KAAKvC,iBACpB,uBACI2C,KAAK,SACLhD,KAAK,OACLC,MAAM,mBACNb,QAASwD,KAAKpC,eAElB,uBAAOuC,QAAQ,OAAf,kBACA,uBACIC,KAAK,OACLhD,KAAK,OACLiD,GAAG,OACHhD,MAAOpB,EACPqE,SAAUN,KAAK/C,iBACfsD,UAAWP,KAAKvC,iBAEpB,uBAAO0C,QAAQ,MAAf,mBACA,uBACIK,OAAO,UACPJ,KAAK,OACLC,GAAG,QACHI,QAAQ,cACRH,SAAUN,KAAKzC,kBAEnB,uBACI6C,KAAK,SACL/C,MAAM,SACNb,QAASwD,KAAKrC,oB,GAtLA+C,aCRnB,MAA0B,6CCA1B,MAA0B,2C,gDCYpBC,E,4MACjB3D,MAAQ,CACJtB,MAAO,GACPkF,OAAQ,I,EAOZnE,aAAe,SAAAZ,GACX,IAAOH,EAAS,EAAKsB,MAAMtB,MAApBA,MACP,EAAK4B,SAAS,CACV5B,MAAOA,EAAMmF,QAAO,SAACC,EAAQC,GACzB,OAAOA,IAAMlF,Q,EAIzBqD,aAAe,SAAC4B,GACZ,EAAKxD,SAAS,CACV5B,MAAM,GAAD,mBAAM,EAAKsB,MAAMtB,OAAjB,CAAwBoF,O,4CAGrC,WACI,IAAOpF,EAASsE,KAAKhD,MAAdtB,MACP,OACI,sBAAKsF,UAAU,YAAYC,MAAO,CAAC,cAAe,OAAlD,UAEI,qBAAKD,UAAW,aAAe9E,IAAKgF,EAAM5E,IAAK,SAFnD,OAGI,oBAAI0E,UAAW,eAAf,4CAHJ,SAII,oBAAGA,UAAW,SAAd,4CAAuD,0BAJ3D,QAOI,qBAAKA,UAAW,aAAcC,MAAO,CAAC,aAAa,MAAM,gBAAgB,SACzE,mBAAIA,MAAO,CAAC,eAAe,MAAO,cAAc,QAAhD,oBACA,oBAAGA,MAAO,CAAC,cAAc,MAAM,eAAe,MAAM,gBAAgB,OAApE,6KACmC,uBAAK,uBADxC,mRAGI,mBAAGA,MAAO,CAAC,OAAS,OAAQE,KAAK,uCAAuCH,UAAU,SAAlF,uBAGJ,mBAAGC,MAAO,CAAC,cAAc,QAAQ,aAAa,QAAS,cAAc,QAArE,2BACA,mBAAGA,MAAO,CAAC,cAAc,MAAM,eAAe,OAA9C,oPAEI,oBAAGA,MAAO,CAAC,cAAc,OAAzB,gDAA+D,uBAA/D,6BAAyF,uBAAzF,kGAEJ,qBAAKD,UAAW,aAAcC,MAAO,CAAC,aAAa,MAAM,gBAAgB,SACzE,sBAAKA,MAAO,CAAC,YAAY,SAAzB,UACI,cAAC,EAAD,CACAvF,MAAOA,EACPe,aAAcuD,KAAKvD,eACnB,gDACA,cAAC,EAAD,CACIyC,aAAcc,KAAKd,kBAC3B,qBAAK8B,UAAW,aAAcC,MAAO,CAAC,aAAa,MAAM,gBAAgB,SACzE,mBAAGA,MAAO,CAACG,UAAW,UAAtB,8DACA,eAACC,EAAA,EAAD,CACIL,UAAU,MACVM,OAAQ,CAAC,SAAU,SACnBC,KAAM,GACNN,MAAO,CAAE1E,OAAQ,IAAKiF,MAAO,QAJjC,UAKI,cAACC,EAAA,EAAD,CACIC,YAAY,0EACZtC,IAAI,uDAEPY,KAAKhD,MAAM4D,OAAOjF,KAAI,SAAAgG,GAAK,OACxB,aAD4B,CAC3BC,EAAA,EAAD,CAEAC,SAAYF,EACZtD,KAAS,IAAIyD,IAAK,CACdC,QAASC,EACTC,cAAeD,EACfE,SAAU,CAAC,GAAG,OALXC,KAAKC,uB,GAnEH1B,a,MCHjC2B,IAASC,OAAO,cAAC,EAAD,IAASxC,SAASC,eAAe,W","file":"static/js/main.11c1f330.chunk.js","sourcesContent":["// based on tutorial from https://www.taniarascia.com/getting-started-with-react/\r\nimport React from 'react'\r\n\r\nconst TableHeader = () => { // Table: functional components\r\n    return(\r\n        <thead>\r\n        <tr>\r\n            <th>Colour</th>\r\n            <th>Latitude</th>\r\n            <th>Longitude</th>\r\n            <th>Time</th>\r\n            <th>Image</th>\r\n            <th>Delete row</th>\r\n        </tr>\r\n        </thead>\r\n    )\r\n}\r\nconst TableBody = (props) => {\r\n    const rows = props.dData.map((row, index) => {\r\n        return (\r\n            <tr key={index}>\r\n                <td>{row.col}</td>\r\n                <td>{row.lat}</td>\r\n                <td>{row.lon}</td>\r\n                <td>{row.time}</td>\r\n                <td><img src={URL.createObjectURL(row.img)} alt=\"ImgSubmission\" height={100}/></td>\r\n                <td>\r\n                    <button onClick={() => props.remove_dData(index)}>X</button>\r\n                </td>\r\n            </tr>\r\n        );\r\n    })\r\n    return <tbody>{rows}</tbody>\r\n}\r\nconst Table = (props) => {\r\n    const {dData, remove_dData} = props\r\n\r\n    return (\r\n        <table>\r\n            <TableHeader />\r\n            <TableBody dData={dData} remove_dData={remove_dData} />\r\n        </table>\r\n    )\r\n}\r\n\r\n// const (\"state\" less components) need to be declared and exported afterwards\r\nexport default Table","// based on tutorial from https://www.taniarascia.com/getting-started-with-react/\r\n//using openweathermap api: visit https://openweathermap.org/weather-data for more weather api information\r\nimport React, {Component} from \"react\";\r\nimport axios from 'axios';\r\nimport Swal from \"sweetalert2\";\r\n\r\n\r\n\r\nexport default class Form extends Component { // Form: class component\r\n    initialState = {\r\n        col: '',\r\n        lat: '',\r\n        lon: '',\r\n        time: '',\r\n        autoloc: '',\r\n        temp: '',\r\n        hum: ''\r\n    }\r\n    state = this.initialState;\r\n\r\n    handleDataChange = e => {\r\n        const {name, value} = e.target\r\n        this.setState({[name]: value})\r\n    }\r\n\r\n    handleImgChange = e => {\r\n        const img = e.target.files[0]\r\n        this.setState({img: img})\r\n    }\r\n\r\n    //TODO fix popup disappearing when pressing enter\r\n    handleKeypress = e => {\r\n        if (e.keyCode === 13){ this.submitForm() }\r\n    }\r\n\r\n    grabLocation = () => {\r\n        navigator.geolocation.getCurrentPosition(\r\n            success => {\r\n                Swal.fire({\r\n                    title: \"Location grabbed!\",\r\n                    confirmButtonText: \"Nice!\",\r\n                    icon: \"success\",\r\n                }).then(() => {\r\n                    this.setState({\r\n                        lat: success.coords.latitude,\r\n                        lon: success.coords.longitude,\r\n                        autoloc: 'Auto'\r\n                    })\r\n                })\r\n            },\r\n            error => {\r\n                Swal.fire({\r\n                    title: \"Error!\",\r\n                    html: 'Pro Tip: Reset your device\\'s permissions and reload the website.<br>' +\r\n                        'If that fails, please input the coordinates manually',\r\n                    confirmButtonText: \"Aw man\",\r\n                    footer: 'Pro Tip 2: Use Google Maps to find the approx coordinates',\r\n                    icon: \"error\",\r\n                }).then(() => {\r\n                    console.log(\"Error while grabbing user's loc:\")\r\n                    console.log(error)\r\n                    this.setState({\r\n                        autoloc: 'Manual'\r\n                    })\r\n                })\r\n            }\r\n        )\r\n    }\r\n\r\n    submitForm = async (e) => {\r\n        if ( (this.state.lat && this.state.lon && this.state.img) === '' ){ //this.state.time && this.state.col\r\n            Swal.fire({\r\n                title: \"Warning\",\r\n                text: \"You missed out vital info!\",\r\n                confirmButtonText: \"Let me double check\",\r\n                icon: \"warning\",\r\n            }).then(/*empty promise*/)\r\n        }\r\n        else {\r\n\t\t\te.preventDefault();\r\n            this.props.handleSubmit(this.state);\r\n            let inst = [];\r\n            const API_key = '39f0b3d543c797a3eeecd77ddd38cf51';\r\n            const url = `https://api.openweathermap.org/data/2.5/weather?units=metric&lat=${this.state.lat}&lon=${this.state.lon}&appid=${API_key}`;//note units=metric\r\n            console.log(url);\r\n\r\n            //get weather api: temperature and humidity\r\n            await axios.get(url).then(res => {\r\n                    console.log(res.data);\r\n                    this.setState({\r\n                        temp: res.data.main.temp,\r\n                        hum: res.data.main.humidity,\r\n                    });\r\n                    //cloned instance of submission object (axios doesn't accept state object)\r\n                     inst = {\r\n                        col: this.state.col,\r\n                        lat: this.state.lat,\r\n                        lon: this.state.lon,\r\n                        time: this.state.time,\r\n                        autoloc: this.state.autoloc,\r\n                        temp: this.state.temp,\r\n                        hum: this.state.hum,\r\n                    }\r\n                }).catch(err => console.log(err));\r\n\r\n\r\n            console.log(inst);//test1\r\n\r\n\t\t\t//POST request to server endpoint /submit\r\n\t\t\tawait axios.post('/submit', {inst} ).then( (res) => {\r\n\t\t\t\tconsole.log(res);\r\n\t\t\t\tconsole.log(res.data);\r\n\r\n\t\t\t\tif(res.data === \"SUCCESS\"){\r\n                    Swal.fire({\r\n                        title: \"Entry submitted\",\r\n                        html: \"Thank you for your submission! <br> You can find your own pin in the map below <br> (Reload the website to see changes)\",\r\n                        icon: \"success\",\r\n                    }).then(/*empty promise*/)\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tSwal.fire({\r\n                        title:\"Server connection went wrong\",\r\n                        html: \"Try again later\",\r\n                        icon: \"warning\",\r\n                    }).then()\r\n\t\t\t\t}\r\n\r\n\t\t\t});\r\n\t\t\t\r\n        }\r\n        this.setState(this.initialState) // clears form\r\n        document.getElementById('fileB').value= null; // resets fileButton text to \"No file chosen\"\r\n    }\r\n\r\n    render() {\r\n        const {col, lat, lon,time} = this.state; //img unused\r\n\r\n        return (\r\n            <form action=\"/submit\" onSubmit={this.submitForm}>\r\n                <label htmlFor=\"col\">Colour</label>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"col\"\r\n                    id=\"col\"\r\n                    value={col}\r\n                    onChange={this.handleDataChange}\r\n                    onKeyDown={this.handleKeypress}/>\r\n                <label htmlFor=\"lat\">Latitude</label>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"lat\"\r\n                    id=\"lat\"\r\n                    value={lat}\r\n                    onChange={this.handleDataChange}\r\n                    onKeyDown={this.handleKeypress}/>\r\n                <label htmlFor=\"lon\">Longitude</label>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"lon\"\r\n                    id=\"lon\"\r\n                    value={lon}\r\n                    onChange={this.handleDataChange}\r\n                    onKeyDown={this.handleKeypress}/>\r\n                <input\r\n                    type=\"button\"\r\n                    name=\"locB\"\r\n                    value=\"Use my location!\"\r\n                    onClick={this.grabLocation}/>\r\n\r\n                <label htmlFor=\"time\">Time</label>\r\n                <input\r\n                    type=\"time\"\r\n                    name=\"time\"\r\n                    id=\"time\"\r\n                    value={time}\r\n                    onChange={this.handleDataChange}\r\n                    onKeyDown={this.handleKeypress}/>\r\n\r\n                <label htmlFor=\"img\">Image</label>\r\n                <input\r\n                    accept=\"image/*\"\r\n                    type=\"file\"\r\n                    id=\"fileB\"\r\n                    capture=\"environment\" //enable mobile external camera instead of file selection\r\n                    onChange={this.handleImgChange}/>\r\n\r\n                <input\r\n                    type=\"button\"\r\n                    value=\"SUBMIT\"\r\n                    onClick={this.submitForm}/>\r\n            </form>\r\n        )\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/jemilicious_logo.15e52c25.png\";","export default __webpack_public_path__ + \"static/media/dandelion_icon.9a95baa8.png\";","// based on tutorial from https://www.taniarascia.com/getting-started-with-react/\r\n// TODO investigate dependence on \"public\" folder (eg, index.html)\r\nimport React, {Component} from 'react'\r\nimport Table from './Table'\r\nimport Form from \"./Form\";\r\nimport logo from \"./static/assets/jemilicious_logo.png\"\r\nimport dandelion from './static/Icon/dandelion_icon.png'\r\nimport {AddMarkers} from \"./markers\";\r\nimport {MapContainer, Marker, TileLayer} from 'react-leaflet';\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport {Icon} from \"leaflet/dist/leaflet-src.esm\";\r\n\r\nexport default class App extends Component {\r\n    state = {\r\n        dData: [], //dandelionData\r\n        marker: []\r\n    }\r\n\r\n    // componentDidMount() { //Use AddMarkers to grab coordinates from google sheets, set marker state to array of coords\r\n    //     AddMarkers().then(r=>this.setState({marker: r}))\r\n    // }\r\n\r\n    remove_dData = index => {\r\n        const {dData} = this.state.dData\r\n        this.setState({\r\n            dData: dData.filter((cdData, i) => {\r\n                return i !== index;\r\n            })\r\n        });\r\n    }\r\n    handleSubmit = (cdData) => { //current dandelionData\r\n        this.setState({\r\n            dData: [...this.state.dData, cdData],\r\n          })\r\n    }\r\n    render() {\r\n        const {dData} = this.state\r\n        return (\r\n            <div className=\"container\" style={{\"padding-top\": '2em'}}>\r\n                    {/*logo, title and imperial college london 2021/2022*/}\r\n                <img className={'img inline'}  src={logo} alt={\"logo\"}/>    {/*inline logo*/}\r\n                <h1 className={'small inline'}>Dandelion Seed Mapping Project</h1>      {/*small capitals inline title*/}\r\n                <p className={'inline'}>ZJORD, Imperial College 2021/22<br/></p>     {/*inline text*/}\r\n\r\n                {/*about section*/}\r\n                <div className={'horizontal'} style={{\"margin-top\":'1em',\"margin-bottom\":'2em'}}/>\r\n                <p  style={{\"margin-right\":'1em', \"font-weight\":'bold'}}> ABOUT</p>\r\n                <p style={{\"margin-left\":'1em',\"margin-right\":'1em','margin-botton':'1em'}}> The goal of this website is to collect data from the general public about the location of dandelion seeds all released from our\r\n                    lab at Imperial College London.<br/><br/> Nature has invented ways many ways to fly however unlike the muscle based flight of animals, plants have developed\r\n                    clever structural designs to utilise wind. We want to track dandelion seeds by painting them a bright colour for you to find and input into this website.</p>\r\n                    <a style={{'margin':'2em'}} href=\"https://www.bfflab.org/research.html\" className=\"button\">READ MORE</a>\r\n\r\n                {/*instruction section*/}\r\n                <p style={{\"margin-left\":'0.5em',\"margin-top\":'1.5em', \"font-weight\":'bold'}}> INSTRUCTIONS</p>\r\n                <p style={{\"margin-left\":'2em',\"margin-right\":'2em'}}> If you have found a dandelion that is an unnatural colour, you have found one of the many dandelion seeds that we have released, use\r\n                this website to upload a picture of the seed along with the time and location when you found it.</p>\r\n                    <p style={{\"margin-left\":'3em'}}>‣find a painted dandelion seed<br/>‣take a photo of seed<br/>\r\n                        ‣submit the photo along with the location and time of where and when you found the seed</p>\r\n                <div className={'horizontal'} style={{\"margin-top\":'1em',\"margin-bottom\":'1em'}}/>\r\n                <div style={{\"max-width\":'600px'}}>\r\n                    <Table\r\n                    dData={dData}\r\n                    remove_dData={this.remove_dData} />\r\n                    <h3>Add new entry!</h3>\r\n                    <Form\r\n                        handleSubmit={this.handleSubmit} /></div>\r\n                <div className={'horizontal'} style={{\"margin-top\":'1em',\"margin-bottom\":'1em'}}/>\r\n                <p style={{textAlign: \"center\"}}> Here are all the found dandelion seeds so far! </p>\r\n                <MapContainer\r\n                    className=\"map\"\r\n                    center={[51.5072, -0.118092]}\r\n                    zoom={10}\r\n                    style={{ height: 500, width: \"100%\" }}>\r\n                    <TileLayer\r\n                        attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"/>\r\n\r\n                    {this.state.marker.map(coord => // Maps all coordinates onto React Markers\r\n                        <Marker\r\n                        key = {Math.random()}\r\n                        position = {coord}\r\n                        icon = { new Icon({\r\n                            iconUrl: dandelion,\r\n                            iconRetinaUrl: dandelion,\r\n                            iconSize: [65,65]\r\n                            //TODO change icon anchor\r\n                             })}\r\n                        /> )}\r\n                </MapContainer>\r\n            </div>\r\n        )\r\n    }\r\n}","//Reference X - taken from https://www.taniarascia.com/getting-started-with-react/\r\n\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nimport './primitiveUI.css'\r\nimport \"leaflet/dist/leaflet.css\"\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}